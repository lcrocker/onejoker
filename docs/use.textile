---
layout: docs
title: "OneJoker: Use"
---

h1. Using the library in your code

h2. Python

OneJoker is a single package imported in the usual way. Here's sample @hello.py@:

{% highlight python %}
import onejoker as oj

if __name__ == "__main__":
    deck = oj.CardList(52)
    deck.fill()
    deck.shuffle()
    hand = oj.CardList(5)

    for i in range(5):
        hand.append(deck.pop())
    print(hand)
{% endhighlight %}

h2. Java

In Java code, import the classes and load the library at the top of your main class:

{% highlight java %}
import com.onejoker.onejoker.*;

public class Hello {
    static {
        System.loadLibrary("onejoker");
    }
    public static void main(String[] args) {
        CardList deck = new CardList(52), hand = new CardList(5);
        deck.fill();
        deck.shuffle();

        for (int i = 0; i < 5; ++i) hand.add(deck.pop());
        System.out.println(hand);
    }
}
{% endhighlight %}

h2. C

For C, include the single header file in your source and add @-lonejoker@ to the link command. If you've installed the library someplace like @/home/lib@, you may also have to add @-L/home/lib@ to tell the linker where to find it.

{% highlight cpp %}
#include <stdio.h>
#include <stdlib.h>
#include "onejoker.h"

int main(int argc, char *argv[]) {
    int i, db[52], hb[5];
    char text[20];
    oj_cardlist_t deck, hand;

    ojl_new(&deck, db, 52);
    ojl_fill(&deck, 52, OJD_STANDARD);
    ojl_shuffle(&deck);

    ojl_new(&hand, hb, 5);
    for (i = 0; i < 5; ++i) ojl_append(&hand, ojl_pop(&deck));

    ojl_text(&hand, text, sizeof(text));
    printf("%s\n", text);

    return 0;
}
{% endhighlight %}

h2. See also
