---
layout: index
title: The OneJoker Project
---

h1. The OneJoker Project

*OneJoker* is a collection of code and other resources for writing card games and simulations. Currently this includes:

* ["RandLib":/onejoker/randlib/index.html]: A library of state-of-the-art algorithms for generating and using pseudo-random numbers. Can be used by people just needing a good PRNG or by people developing PRNGs to provide all the necessary accompanying code and tests without extra work.
* ["CardLib":/onejoker/cardlib/index.html]: A library of routines specific to card games and simulations. Includes things like shuffling decks, dealing hands, evaluating hands, and some high-powered combinatorics.

Both *RandLib* and *CardLib* are written in ["C":http://en.wikipedia.org/wiki/C_(programming_language)], with binding code to allow them to be used from ["C++":http://thread.gmane.org/gmane.comp.version-control.git/57643/focus=57918], ["Python":http://python.org/], and ["Java":http://openjdk.java.net/]. C is my "native tongue", and best suited to code that needs to be balls-to-the-wall fast like code to simulate billions of hands of blackjack or poker. Python is my current mistress, and the first tool I reach for to get something done quickly. So being able to call the fast C routines from nice easy-to-write and easy-to-read Python gives me the best of both. Java I'm pretty indifferent about, but it's popular (especially now with the ascent of ["Android":http://developer.android.com/index.html]), I've used it enough to be familiar with it, so I added that binding. I'd rather have my teeth pulled without anesthesia than write in C++, but having written the C code, writing a C++ wrapper is only a few lines of code, so those masochists out there who use C++ (or who are forced to use it) can use the libraries too.

I also do all the coding on ["Linux":http://www.linux.org/]. Software development on ["Windows":http://www.computerworld.com/s/article/9005873/Windows_development_chief_I_would_buy_a_Mac_if_I_didn_t_work_for_Microsoft_] isn't quite as painful as C++, but it's close. I even worked for the Evil Empire briefly back when they were an Empire--now they're kind of the Evil Also-ran. But you can use the libraries from Windows as well, because of a wonderful project called ["MinGW":http://www.mingw.org/], which allows us Unix geeks to write software in a familiar environment that runs on Windows. I know nothing at all about Macs or Objective-C. If you want to port my libraries to Cheesy Cheetah or whatever the lastest Apple OS is, you have my blessing, just not my my help. I hear it's vaguely Unix-y--even some of my Linux brethren do their work on Macs--so it might not be that hard, but I just don't know.

I plan to also upload things like card images, an Internet game server, explanatory texts (maybe with an opinion or two), full sample programs, and other related things.
